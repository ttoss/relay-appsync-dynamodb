Resources:
  AppSyncGraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: API_KEY
      Name: !Join [':', [!Ref 'AWS::StackName', AppSyncGraphQLApi]]

  AppSyncApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId

  AppSyncGraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId
      Definition: !SubString src/schema.graphql

  AppSyncGraphQLApiIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: appsync.amazonaws.com
      Policies:
        - PolicyName: AppSyncGraphQLApiIAMRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: '*'

  DynamoDBAppSyncDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId
      DynamoDBConfig:
        AwsRegion: !ImportValue RelayAppsyncDynamodbDynamodb-main:DynamoDBTableRegion
        TableName: !ImportValue RelayAppsyncDynamodbDynamodb-main:DynamoDBTableName
      Name: DynamoDBAppSyncDataSource
      ServiceRoleArn: !GetAtt AppSyncGraphQLApiIAMRole.Arn
      Type: AMAZON_DYNAMODB

  QueryUserAppSyncResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBAppSyncDataSource.Name
      FieldName: user
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "id": $util.dynamodb.toDynamoDBJson($ctx.args.id),
          }          
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
      TypeName: Query

  QueryNodeAppSyncResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBAppSyncDataSource.Name
      FieldName: node
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "id": $util.dynamodb.toDynamoDBJson($ctx.args.id),
          }          
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
      TypeName: Query

  UserPostsAppSyncResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBAppSyncDataSource.Name
      FieldName: posts
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "Query",
          "query": {
          #if($ctx.args.after)
            "expression": "userId = :userId AND title > :after",
            "expressionValues" : {
              ":after": $util.dynamodb.toDynamoDBJson($ctx.args.after),
              ":userId": $util.dynamodb.toDynamoDBJson($ctx.source.id),
            },
          #else
            "expression": "userId = :userId",
            "expressionValues" : {
              ":userId": $util.dynamodb.toDynamoDBJson($ctx.source.id),
            },
          #end
          },
          "index": "queryUserPosts",
          "limit": $ctx.args.first
        }
      ResponseMappingTemplate: |
        #set($startCursor = "")
        #set($endCursor = "")
        #foreach($item in $ctx.result.items)
          #set($item.cursor = $item.title)
          #if($utils.isNullOrBlank($startCursor))
            #set($startCursor = $item.cursor)
          #end
          #if(!$foreach.hasNext)
            #set($endCursor = $item.cursor)
          #end
        #end
        #set($hasNextPage = true)
        #if($utils.isNullOrBlank($ctx.result.nextToken))
          #set($hasNextPage = false)
        #end
        $util.toJson({
          "edges": $ctx.result.items,
          "ctx": $util.toJson($ctx),
          "pageInfo": {
            "hasNextPage": $hasNextPage,
            "hasPreviousPage": true,
            "startCursor": $startCursor,
            "endCursor": $endCursor
          }
        })
      TypeName: User

  PostEdgeNodeAppSyncResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt AppSyncGraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBAppSyncDataSource.Name
      FieldName: node
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "id": $util.dynamodb.toDynamoDBJson($ctx.source.id),
          }          
        }
      ResponseMappingTemplate: $util.toJson($ctx.result)
      TypeName: PostEdge
